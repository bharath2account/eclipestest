/*!
    @page Blinking_LED_group Blinking LED
    @brief Basic application that presents the project scenarios for S32 SDK
    
    ## Application description ##
    _____
    The purpose of this demo is to provide the user with an out-of-the box 
    example application for S32K144 platform, using S32 SDK.
    The demo uses hardware abstraction layer primitives for PCC and PORT
    modules and one S32 Design Studio where the project is using ProcessorExpert, 
    in order to toggle two LEDs alternatively.
    
    There are five projects delivered with this package:
       - IAR Embedded Workbench project
       - S32 Design Studio project
       - Makefile project (GCC compiler)
       - Makefile project (GHS compiler)
       - Makefile project (IAR compiler)
       - Makefile project (CSMC compiler)
       - Makefile project (DCC compiler)
       
   @note For information about how to run the makefile and IAR projects please refer to @ref Usage
    
    ## Prerequisites ##
    _____
    The run the example you will need to have the following items:
    - 1 S32K144 board
    - 1 Power Adapter 12V (if the board cannot be powered from the USB port)
    - 1 Personal Computer
    - 1 Jlink Lite Debugger (optional, users can use Open SDA)
    
    ## Boards supported ##
    _____
    The following boards are supported by this application:
    - S32K144EVB-Q100
    - S32K144-MB
    
    ## Hardware Wiring ##
    _____
    The following connections must be done to for this example application to work:
    
    PIN FUNCTION    |	S32K144EVB-Q100	        |	S32K144-MB
    ----------------|---------------|--------------
    RED_LED	(\b PTD15) |RGB_RED - wired on the board	|	J12.17 - J11.31
    GREEN_LED (\b PTD16) |RGB_GREEN - wired on the board  |	J12.16 - J11.30
    
    ## How to run ##
    _____
    #### 1. Importing the project into the workspace ####
    After opening S32 Design Studio, go to \b File -> \b New \b S32DS \b Project \b From... and select \b Blinking_LED. Then click on \b Finish. \n
    The project should now be copied into you current workspace.
    #### 2. Generating the Processor Expert configuration ####
    First go to \b Project \b Explorer View in S32 DS and select the current project(\b Blinking_LED). Then go to \b Project and click on \b Generate \b Processor \b Expert \b Code \n
    Wait for the code generation to be completed before continuing to the next step.
    #### 3. Building the project ####
    Select the configuration to be built \b FLASH (Debug_FLASH) or \b RAM (Debug_RAM) by left clicking on the downward arrow corresponding to the \b build button(@image hammer.png). 
    Wait for the build action to be completed before continuing to the next step.
    #### 4. Running the project ####
    Go to \b Run and select \b Debug \b Configurations. There will be four debug configurations for this project:
     Configuration Name | Description
     -------------------|------------
     \b Blinking_LED \b Debug_RAM \b Jlink | Debug the RAM configuration using Segger Jlink debuggers
     \b Blinking_LED \b Debug_FLASH \b Jlink | Debug the FLASH configuration using Segger Jlink debuggers
     \b Blinking_LED \b Debug_RAM \b PEMicro | Debug the RAM configuration using PEMicro debuggers 
     \b Blinking_LED \b Debug_FLASH \b PEMicro | Debug the FLASH configuration using PEMicro debuggers 
    \n Select the desired debug configuration and click on \b Launch. Now the perspective will change to the \b Debug \b Perspective. \n
    Use the controls to control the program flow.
    
    @note For more detailed information related to S32 Design Studio usage please consult the available documentation.
    

*/

